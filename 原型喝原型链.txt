如何准确判断一个变量是数组类型
var arr = [];
arr instanceof Array
arr instanceof Object

写一个原型链继承的例子
function Elem (id) {
    this.elem = document.getElementById(id)
}

Elem.prototype.html = function (val) {
    var elem = this.elem;
    if(val) {
        elem.innerHTML = val
        return this
    }else{
        return elem.innerHTML
    }
}

Elem.prototype.on = function (type, fn) {
    var elem = this.elem;
    elem.addEventListener(type, fn)
    return this
}

var div1 = new Elem('div1)

描述new一个对象的过程
创建一个新对象
this指向这个新对象
执行代码，即对this赋值
返回this

zepto(或其他框架)源码中如何使用原型链


5条原型规则
所有的引用类型(数组、对象、函数)，都具有对象特性，即可自由扩展属性(除了 null 以外)
所有的引用类型(数组、对象、函数),都有一个__proto__属性(隐示原型)，属性值是一个普通的对象
所有的函数，都有一个prototype属性(显示原型),属性值也是一个普通的对象
所有的引用类型(数组、对象、函数),__proto__属性值指向它的构造函数的"prototype"属性值
当试图得到一个对象的某个属性时，如果这个对象本身没有这个属性，那么会去它的__proto__(即它的构造函数的prototype)中寻找