说一下对变量提升的理解
变量定义、函数声明(注意函数声明与函数表达式的区别)都会被提前

说明this几种不同的使用场景
作为构造函数执行
作为对象属性执行
作为普通函数执行
call apply bind

创建10个<a>标签，点击的时候弹出来对应的序号
var i;
for(i = 0; i < 10; i++) {
    (function (i) {
        var a = document.createElement('a');
        a.innerHTML = i + '<br />';
        a.addEventListener('click', function (e) {
            e.preventDefault();
            alert(i)
        })
        document.body.appendChild(a);
    })(i);
}

如何理解作用域
1、自由变量
2、作用域链，即自由变量的查找
3、闭包的两个场景

实际开发中闭包的应用
闭包在实际的应用中主要用于封装变量，收敛权限

执行上下文
范围：一段<script>或者一个函数
全局：变量定义、函数声明
函数：变量定义、函数声明、this、arguments

this要在执行时才能确认值，定义时无法确认
JS没有块级作用域，只有函数和全局作用域

闭包的使用场景
1、函数作为返回值
2、函数作为参数传递

《高级程序设计》上，这样说：当在函数内部定义了其他函数时候，就创建了闭包。闭包有权访问包含函数内部的所有变量。